name: .NET

on:
  push:
    paths:
      - 'src/**'
    branches: [ "main" ]
  pull_request:
    paths:
      - 'src/**'
    branches: [ "main" ]

  workflow_dispatch:


defaults:
  run:
    working-directory: src

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.301
  #
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 1.11

    - uses: actions/checkout@v2
      with:
        fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

    - name: Install SonarCloud scanner
      if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
      run: |
        dotnet tool install --global dotnet-sonarscanner
        
    - name: Install Report Generator
      run: dotnet tool install --global dotnet-reportgenerator-globaltool
        
 #   - name: Restore dependencies
 #     run: dotnet restore
 #     
 #   - name: Build
 #     run: dotnet build --no-restore
 #     
 #   - name: Test
 #     run: dotnet test --no-build --verbosity normal
 
    - name: Build and analyze
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      #shell: powershell
      run: |
        dotnet-sonarscanner begin /k:"felipementel_PotatoStore" /o:"felipementel" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
        dotnet restore ./src/Potato.Product.sln
        dotnet build ./src/Potato.Product.sln --configuration Release
        dotnet test ./src/Tests/Potato.Product.Api.Test/Potato.Product.Api.Test.csproj --collect:"XPlat Code Coverage" --logger trx --results-directory $GITHUB_WORKSPACE/test/testresults
        reportgenerator -reports:$GITHUB_WORKSPACE/test/testresults/**/coverage.cobertura.xml -targetdir:$GITHUB_WORKSPACE/test/coverlet/reports -reporttypes:"SonarQube"
        dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
